<% layout('layouts/boilerplate.ejs') %>

<div class="row">
    <div class="col-6">
        <!-- Campground Details Card -->
        <% if(campground.image.length) { %>
            <div id="carouselExample" class="carousel slide carousel-fade">
                <div class="carousel-inner">
                    <% campground.image.forEach((img, i)=> { %>
                        <div class="carousel-item <%= i === 0 ? 'active' : '' %>">
                            <img src="<%= img.url %>" class="d-block w-100" alt="Image not rendered">
                        </div>
                        <% }) %>
                </div>
                <% if(campground.image.length> 1){ %>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                <% } %>
            </div>
        <% } %>
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title">
                    <%= campground.name %>
                </h5>
                <p class="card-text">
                    <%= campground.description %>
                </p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item text-muted">
                    <%= campground.location %>
                </li>
                <li class="list-group-item">Rs. <%= campground.price %>/Night</li>
                <li class="list-group-item">Submitted by <b>
                        <%= campground.author.username %>
                    </b></li>
            </ul>
            <% if (currentuser && campground.author.equals(currentuser._id)) { %>
                <div class="card-body">
                    <div class="d-inline">
                        <a href="/campground/<%= campground._id %>/edit" class="card-link btn btn-info">Edit</a>
                    </div>
                    <form class="d-inline" action="/campground/<%= campground._id %>?_method=DELETE"
                        method="POST">
                        <button type="submit" class="card-link btn btn-danger"><i
                                class="fa fa-trash"></i></button>
                    </form>
                </div>
            <% } %>
        </div>
    </div>

    <div class="col-6">
        <div id="map" style="width: 400px; height: 300px;"></div>
        <% if (currentuser) { %>
            <!-- Review Form Card -->
                <h2>Leave a review</h2>
                <div class="card-body">
                    <form action="/campground/<%= campground._id %>/reviews" method="post" class="mb-3 needs-validation"
                        novalidate>
                        <div class="mb-3">
                            <fieldset class="starability-basic">
                                <legend>Rating:</legend>
                                <!-- Star Rating Input -->
                                <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="0"
                                    checked aria-label="No rating." />
                                <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                                <label for="first-rate1" title="Terrible">1 star</label>
                                <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                                <label for="first-rate2" title="Not good">2 stars</label>
                                <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                                <label for="first-rate3" title="Average">3 stars</label>
                                <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                                <label for="first-rate4" title="Very good">4 stars</label>
                                <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                                <label for="first-rate5" title="Amazing">5 stars</label>
                            </fieldset>
                        </div>
                        <div class="mb-3">
                            <!-- Review Textarea -->
                            <label class="form-label" for="review">Review</label>
                            <textarea class="form-control" cols="30" rows="3" name="review[body]" id="review"
                                required></textarea>
                            <div class="valid-feedback">Looks good!</div>
                            <div class="invalid-feedback">Provide valid feedback</div>
                        </div>
                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-success">Submit</button>
                    </form>
                </div>
        <% } %>
            <% if (campground.reviews.length) { %>
                <% for (let review of campground.reviews) { %>
                    <div class="card">
                        <div class="card-body">
                            <h3 class="starability-result" data-rating="<%=review.rating%>">Rated: <%= review.rating %> stars</h3>
                            <p class="card-text">Review: <%= review.body %>
                            </p>
                            <h6 class="card-subtitle mb-2 text-muted">By: <%= review.author.username %>
                            </h6>
                        </div>
                        <% if (currentuser && review.author.equals(currentuser._id)) { %>
                            <div class="card-footer">
                                <form class="d-inline"
                                    action="/campground/<%= campground._id %>/reviews/<%= review._id %>?_method=DELETE"
                                    method="POST">
                                    <button type="submit" class="card-link btn btn-danger"><i
                                            class="fa fa-trash"></i></button>
                                </form>
                            </div>
                        <% } %>
                    </div>
                <% } %>
            <% } %>
    </div>
</div>

<script>
    const campgroundCoordinates = <%- JSON.stringify(campground.geometry.coordinates) %>;

mapboxgl.accessToken = '<%= process.env.MAPBOX_TOKEN %>';
const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v11',
    zoom: 5,
    center: campgroundCoordinates // Use the coordinates directly here
});

const popup = new mapboxgl.Popup({ offset: 25 }).setHTML(
    `<h5><%= campground.name %></h5><p><%= campground.location %></p>`
);
const marker = new mapboxgl.Marker()
.setLngLat(campgroundCoordinates)
.setPopup(popup)
.addTo(map);

map.addControl(new mapboxgl.NavigationControl());
map.scrollZoom.disable();

map.on('style.load', () => {
map.setFog({});
});

// The following values can be changed to control rotation speed:

// At low zooms, complete a revolution every two minutes.
const secondsPerRevolution = 240;
// Above zoom level 5, do not rotate.
const maxSpinZoom = 5;
// Rotate at intermediate speeds between zoom levels 3 and 5.
const slowSpinZoom = 3;

let userInteracting = false;
const spinEnabled = false;

function spinGlobe() {
const zoom = map.getZoom();
if (spinEnabled && !userInteracting && zoom < maxSpinZoom) {
    let distancePerSecond = 360 / secondsPerRevolution;
    if (zoom > slowSpinZoom) {
        // Slow spinning at higher zooms
        const zoomDif =
            (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);
        distancePerSecond *= zoomDif;
    }
    const center = map.getCenter();
    center.lng -= distancePerSecond;
    // Smoothly animate the map over one second.
    // When this animation is complete, it calls a 'moveend' event.
    map.easeTo({ center, duration: 1000, easing: (n) => n });
}
}

// Pause spinning on interaction
map.on('mousedown', () => {
userInteracting = true;
});
map.on('dragstart', () => {
userInteracting = true;
});

// When animation is complete, start spinning if there is no ongoing interaction
map.on('moveend', () => {
spinGlobe();
});

spinGlobe();
</script>